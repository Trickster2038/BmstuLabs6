pkg load statistics
pkg load signal

% Имитационное моделирование случайных сигналов
% Расчет энергетических характеристик сигнала
clear all; % Очищаем память
close all; % Закрываем все окна с графиками
clc; % Очистка окна команд и сообщений
tColor='b'; % Цвет графиков во временной области
Color0='r'; % Цвет графиков эталонного сигнала
tColorLight=[0.3 0.7 0.9]; % Цвет графиков во временной области
fColor=[1 0.4 0]; % Цвет графиков в частотной области
eColor=[0.85 0.325 0.098]; % Цвет графиков погрешности
eColorLight=[0.9 0.9 0.4]; % Цвет графиков погрешности
eColorDark=[0.635 0.078 0.184]; % Цвет графиков погрешности
fd=100; % Частота дискретизации, Гц
tmin=0; tmax=1; dt=tmax-tmin; % Интервал определения функции
N = dt*fd; % Количество отсчетов

f_mu = 11; % Математическое ожидание частоты сигнала
f_sigma = 0.4; % Среднеквадратичное отклонение частоты сигнала
A_mu = 3;
A_sigma = 0.5;

f_a = f_mu-5*f_sigma; % Интервал случайного распределения
f_b = f_mu+5*f_sigma; % частоты
% A_a = 10; A_b = 12; % Интервал случайного распределения амплитуды
% dA = A_b-A_a; % Длина интервала случайного распределения амплитуды
%rng(2020); % Инициализация генератора случайных чисел
% freq1 = 11;

% Моделирование случайного сигнала с нормальным распределением
% (частота псевдослучайного сигнала)
td = linspace(tmin,tmax,N); % Формирование области определения

% x = 0:1:100
%f_prob = makedist('Normal',f_mu,f_sigma); % Распределение вероятности
% f_prob = unifpdf(x)
% f = random(f_prob,N,1); % Формирование значений
f = normrnd(f_mu, f_sigma, N)(:)'(1:1:N)
% f = normrnd(f_mu, f_sigma)
% f_plot = normrnd(f_mu, f_sigma, N*100)(:)'(1:1:N*100)
% Формирование гистограммы
Npsd = 50; % Количество точек гистограммы
nBars = 10; % Количество прямоугольников гистограммы

% figure; histogram(f,nBars,'EdgeColor',eColorDark,...
figure; %hist(f, nBars, ... %,'EdgeColor',eColorDark,...

%'Normalization','pdf','FaceColor',eColor,...
%'LineWidth',3); % Экспериментальная
hist(f, nBars,"facecolor", "r", "edgecolor", "b");


title({'\rm Гистограмма нормального распределения',...
'случайной величины (частоты сигнала)'}); % Заголовок
xlabel('Отклонение частоты сигнала,\it \Deltaf,\rm Гц'); % Надпись оси абсцисс
ylabel('Плотность вероятности,\it \Phi(\Deltaf),\rm 1/Гц'); % Надпись оси ординат
% Формирование теоретической функции плотности распределения
%f_pdf = f_a:(f_b-f_a)/Npsd:f_b; % Область определения
%Phi_f = pdf(f_prob,f_pdf); % Плотность распределения

% Формирование графика
% hold on; hist(f_plot, nBars*100,"facecolor", "r", "edgecolor", "b");
%legend('Экспериментальная','Теоретическая','Location','northeast');

% Формирование графика
figure;plot(td,f,'Color',tColor,'LineWidth',2);
set(get(gcf, 'CurrentAxes'), 'FontSize', 10); % Изменение шрифта
title({'\rm Случайная величина с нормальным распределением','(частота сигнала)'
}); % Заголовок
xlabel('Время,\it nT_д\rm, с'); % Надпись оси абсцисс
ylabel('Частота сигнала,\it f(nT_д )\rm, Гц'); % Надпись оси ординат

% Моделирование случайного сигнала с равномерным распределением
% (амплитуда псевдослучайного сигнала)

% A_prob = makedist('Uniform',A_a,A_b); % Распределение вероятности
%A = random(A_prob,N,1); % Формирование значений

A = lognrnd(A_mu, A_sigma, N)(:)'(1:1:N)

% Формирование гистограммы
Npsd = 50; % Количество точек гистограммы
nBars = 10; % Количество прямоугольников гистограммы

figure; %histogram(A,nBars,'EdgeColor',eColorDark,...
%'Normalization','pdf','FaceColor',eColor,...
%'LineWidth',3); % Экспериментальная
hist(A, nBars,"facecolor", "r", "edgecolor", "b");

title({'\rm Гистограмма логнормального распределения',...
'случайной величины (амплитуды сигнала)'}); % Заголовок
xlabel('Отклонение амплитуды сигнала,\it \DeltaA\rm, В'); % Надпись оси абсцисс
ylabel('Плотность вероятности,\it \Phi(\DeltaA)\rm, 1/В'); % Надпись оси ординат
% Формирование теоретической функции плотности распределения
% A_pdf = A_a-0.25*dA:dA/Npsd:A_b+0.25*dA; % Область определения
% Phi_A = pdf(A_prob,A_pdf); % Плотность распределения
% Формирование графикаЫЫ
% hold on; plot(A_pdf,Phi_A,'Color',Color0,'LineWidth',3);
% legend('Экспериментальная','Теоретическая','Location','northeast');

% Формирование графика
figure;plot(td,A,'Color',tColor,'LineWidth',2);
set(get(gcf, 'CurrentAxes'), 'FontSize', 10); % Изменение шрифта
title({'\rm Случайная величина с логнормальным распределением','(амплитуда сигнала)'}); % Заголовок
xlabel('Время,\it nT_д\rm, с'); % Надпись оси абсцисс
ylabel('Амплитуда сигнала,\it A(nT_д )\rm, В'); % Надпись оси ординат

% Моделирование псевдослучайного гармонического сигнала
xd = A.*cos(2*pi*f.*td); % Формирование значений
% Формирование графика
figure;plot(td,xd,'Color',tColor,'LineWidth',2);
set(get(gcf, 'CurrentAxes'), 'FontSize', 10); % Изменение шрифта
title({'\rm Псевдослучайный гармонический сигнал'}); % Заголовок
xlabel('Время,\it nT_д\rm, с'); % Надпись оси абсцисс
ylabel('Сигнал,\it x(nT_д )\rm, В'); % Надпись оси ординат


xd
typeinfo(xd)
% Формирование функции спектральной плотности мощности
[psd,freq] = periodogram(xd,rectwin(length(xd)),...
length(xd),fd,'psd'); % Формирование значений
% Формирование графика
figure; plot(freq,psd,'Color',fColor,'LineWidth',2);
set(get(gcf, 'CurrentAxes'), 'FontSize', 10); % Изменение шрифта
title({'\rm Функция спектральной плотности мощности',...
'псевдослучайного гармонического сигнала'}); % Заголовок
xlabel('Частота,\it f\rm, Гц'); % Надпись оси абсцисс
ylabel('Спектральная плотность мощности,\it S(f)\rm, Вт/Гц'); % Надпись оси ординат